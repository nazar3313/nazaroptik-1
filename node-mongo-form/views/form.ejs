<!-- form.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Form</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <style>
    body {
      background-color: #f4f4f4;
    }

    .container {
      background-color: #ffffff;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      border-radius: 8px;
      padding: 30px;
      margin-top: 50px;
    }

    .form-label {
      color: #495057;
    }

    .form-control {
      background-color: #f8f9fa;
    }

    .btn-primary {
      background-color: #007bff;
      border-color: #007bff;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-md-6">
        <h1 class="text-center mb-4">Hasta Ekle</h1>
        <form action="/form" method="POST" enctype="multipart/form-data">
          <div class="mb-3">
            <label for="isim" class="form-label">Ad:</label>
            <input type="text" class="form-control" id="isim" name="isim" required>
          </div>
          
          <div class="mb-3">
            <label for="soyisim" class="form-label">Soyad:</label>
            <input type="text" class="form-control" id="soyisim" name="soyisim" required>
          </div>
          
          <div class="mb-3">
            <label for="foto" class="form-label">Fotoğraf:</label>
            <input type="file" class="form-control" id="foto" name="foto" accept="image/*" capture="camera" required>
          </div>


          <button type="submit" class="btn btn-primary">Gönder</button>
        </form>
      </div>
    </div>
  </div>
  
<script>
  async function convertAndSubmit() {
    const isim = document.getElementById('isim').value;
    const soyisim = document.getElementById('soyisim').value;
    const fotoInput = document.getElementById('foto');
    const foto = fotoInput.files[0];

    if (!foto) {
      alert('Lütfen bir fotoğraf seçin.');
      return;
    }

    // Fotoğrafı webp formatına dönüştür
    const webpBuffer = await convertToWebp(foto);

    // Dönüştürülen fotoğrafı server'a gönder
    const formData = new FormData();
    formData.append('isim', isim);
    formData.append('soyisim', soyisim);
    formData.append('foto', new Blob([webpBuffer], { type: 'image/webp' }));

    const response = await fetch('/form', {
      method: 'POST',
      body: formData,
    });

    if (response.ok) {
      // Başarılıysa sayfayı yenile
      location.reload();
    } else {
      console.error('Form gönderme hatası:', response.statusText);
    }
  }

  async function convertToWebp(file) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.onload = async function () {
        const img = new Image();
        img.src = reader.result;

        img.onload = async function () {
          const canvas = document.createElement('canvas');
          canvas.width = img.width;
          canvas.height = img.height;

          const context = canvas.getContext('2d');
          context.drawImage(img, 0, 0, img.width, img.height);

          canvas.toBlob(
            async function (blob) {
              const arrayBuffer = await blob.arrayBuffer();
              resolve(new Uint8Array(arrayBuffer));
            },
            'image/webp',
            1
          );
        };
      };

      reader.readAsDataURL(file);
    });
  }
</script>
</body>
</html>
